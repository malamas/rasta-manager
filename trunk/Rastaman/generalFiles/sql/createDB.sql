DROP TABLE PLAYLIST_SONG;
DROP TABLE PLAYLIST;
DROP TABLE SONG;
DROP TABLE ALBUM;
DROP TABLE GROUP_ARTIST;
DROP TABLE ARTIST;
DROP TABLE MUSIC_GROUP;
DROP TABLE LABEL;
DROP TABLE GENRE;

CREATE TABLE LABEL (
    ID              INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    LABEL_NAME      VARCHAR(100) NOT NULL,
    ADDRESS         VARCHAR(100),
    TELEPHONE       VARCHAR(100)
);

CREATE TABLE GENRE (
    ID              INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    GENRE_NAME      VARCHAR(100) NOT NULL
);

CREATE TABLE MUSIC_GROUP (
    ID              INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    GROUP_NAME      VARCHAR(100) NOT NULL,
    FORMATION_DATE  DATE
);

CREATE TABLE ARTIST (
    ID              INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    LAST_NAME       VARCHAR(100),
    FIRST_NAME      VARCHAR(100),
    ARTISTIC_NAME   VARCHAR(100),
    SEX             VARCHAR(1),
    BIRTH_DATE      DATE,
    PLACE_OF_BIRTH  VARCHAR(100),
    GENRE_ID        INTEGER NOT NULL,
    FOREIGN KEY (GENRE_ID) REFERENCES GENRE(ID) ON DELETE RESTRICT
);

CREATE TABLE GROUP_ARTIST (
    GROUP_ID     INTEGER,
    ARTIST_ID    INTEGER,
    FOREIGN KEY (GROUP_ID) REFERENCES MUSIC_GROUP(ID) ON DELETE CASCADE,
    FOREIGN KEY (ARTIST_ID) REFERENCES ARTIST(ID) ON DELETE CASCADE
);

CREATE TABLE ALBUM (
    ID              INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    ALBUM_TITLE     VARCHAR(100) NOT NULL,
    RELEASE_DATE    DATE,
    ALBUM_TYPE      VARCHAR(2),
    DISK_NO         INTEGER,
    GROUP_ID        INTEGER,
    ARTIST_ID       INTEGER,
    LABEL_ID        INTEGER,
    FOREIGN KEY (GROUP_ID) REFERENCES MUSIC_GROUP(ID) ON DELETE RESTRICT,
    FOREIGN KEY (ARTIST_ID) REFERENCES ARTIST(ID) ON DELETE RESTRICT,
    FOREIGN KEY (LABEL_ID) REFERENCES LABEL(ID) ON DELETE RESTRICT
);

CREATE TABLE SONG (
    ID              INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    SONG_TITLE      VARCHAR(100) NOT NULL,
    DURATION        INTEGER,
    TRACK_NO        INTEGER,
    ALBUM_ID        INTEGER,
    FOREIGN KEY (ALBUM_ID) REFERENCES ALBUM(ID) ON DELETE CASCADE
);

CREATE TABLE PLAYLIST (
    ID              INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    PLAYLIST_NAME   VARCHAR(100) NOT NULL
);

CREATE TABLE PLAYLIST_SONG (
    PLAYLIST_ID     INTEGER,
    SONG_ID         INTEGER,
    FOREIGN KEY (PLAYLIST_ID) REFERENCES PLAYLIST(ID) ON DELETE CASCADE,
    FOREIGN KEY (SONG_ID) REFERENCES SONG(ID) ON DELETE CASCADE
);

